<?xml version="1.0" encoding="UTF-8"?>    
<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
  xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd">    
    <id>package</id>    
    <formats>    
        <format>zip</format><!-- 包的输出格式 目前还支持zip，tar，tar.gz，tar.bz2，jar，dir，war格式
-->
    </formats>    
    <includeBaseDirectory>true</includeBaseDirectory>    
    <fileSets>    
        <fileSet>    
            <directory>bin</directory>    
            <outputDirectory>/</outputDirectory>    
        </fileSet>    
        <fileSet>
			<!-- 把directory目录下的文件拷贝至跟xxx.jar同目录的config文件夹下-->
            <directory>src/main/resources</directory>
			<!-- 
				xxx.jar优先读取application.properties配置文件的顺序：
				1、同目录下的config文件夹下(默认就是config，所以outputDirectory配置成config/)
				2、同目录
				3、classpath下的config文件夹下
				4、classpath目录
			-->
            <outputDirectory>config/</outputDirectory>
			<!-- 只拷贝那是.properties文件，可配置-->
			<includes>    
                <include>*.properties</include>    
            </includes>
        </fileSet>  
        <fileSet>
		    <!-- 将directory目录(target目录)下的文件拷贝至当前目录-->
            <directory>${project.build.directory}</directory>    
            <outputDirectory>/</outputDirectory>
			<!-- 只拷贝.jar(此时directory即target目录下只有一个jar结尾的文件，正好是我们需要的那个可执行文件)-->			
            <includes>    
                <include>*.jar</include>    
            </includes>  
        </fileSet>    
    </fileSets>    
    <dependencySets>    
        <dependencySet>
			<!-- 所有运行时依赖的jar包归档到lib目录下,跟pom.xml的架包依赖目录名称一致 -->
            <outputDirectory>lib</outputDirectory>    
            <scope>runtime</scope>    
<!--             <unpack>false</unpack> --> 
			<!-- 不拷贝可执行文件xxx.jar至lib文件夹下-->   
            <excludes>    
<!--                 <exclude>${project.name}-${project.version}</exclude> -->    
                <exclude>${groupId}:${artifactId}</exclude>    
            </excludes>    
        </dependencySet>    
    </dependencySets>    
</assembly>